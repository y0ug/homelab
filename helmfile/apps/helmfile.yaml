---
repositories:
- name: bjw-s
  url: https://bjw-s.github.io/helm-charts
- name: cnpg
  url: https://cloudnative-pg.github.io/charts
    #- name: ocis
    #url: https://owncloud.github.io/ocis/helm

environments:
  default:
    values:
    - ../env/prod/default.yaml
    secrets:
    - ../env/prod/secrets.yaml

  dev:
    values:
    - ../env/dev/default.yaml
    secrets:
    - ../env/dev/secrets.yaml

templates:
  default: &default
    chart: bjw-s/app-template
    values:
      - values/{{`{{ .Release.Name }}`}}.yaml.gotmpl

---
releases:
- name: ztnet 
  namespace: ztnet 
  installed: false 
  dependencies:
    - chart: cnpg/cluster
      version: v0.1.0
  inherit:
    - template: default

- name: unifi-controller 
  namespace: unifi-controller
  installed: true 
  inherit:
    - template: default

- name: homepage 
  namespace: homepage 
  installed: true 
  inherit:
    - template: default

- name: gatus 
  namespace: gatus 
  installed: true 
  dependencies:
    - chart: cnpg/cluster
      version: v0.1.0
  inherit:
    - template: default

- name: attic 
  namespace: attic 
  installed: false
  dependencies:
    - chart: cnpg/cluster
      version: v0.1.0
  inherit:
    - template: default

- name: changedetection 
  namespace: changedetection 
  installed: false
  inherit:
    - template: default

- name: unpoller 
  namespace: monitoring-ext 
  inherit:
    - template: default

- name: mktxp 
  namespace: monitoring-ext 
  inherit:
    - template: default

- name: telegraf 
  namespace: monitoring-ext 
  installed: false
  inherit:
    - template: default

- name: zoneit 
  namespace: zoneit 
  inherit:
    - template: default

- name: mqtt-notif 
  namespace: monitoring-ext 
  inherit:
    - template: default

- name: adguardhome 
  namespace: adguardhome 
  inherit:
    - template: default

- name: it-tools 
  namespace: it-tools 
  inherit:
    - template: default

- name: hass 
  namespace: hass 
  inherit:
    - template: default

- name: c2app-level1 
  namespace: c2app 
  inherit:
    - template: default

# - name: crypto-storage
#   namespace: crypto
#   createNamespace: true
#   installed: true
#   chart: bjw-s/app-template
#   values:
#     - rawResources:
#         blockchain-storage-class:
#           apiVersion: storage.k8s.io/v1
#           kind: StorageClass
#           spec:
#             metadata:
#               name: blockchain-nfs-storage
#             provisioner: nfs.csi.k8s.io
#             parameters:
#               server: 10.83.101.5
#               share: /mnt/hot/blockchains
#               mountPermissions: "0777"
#             reclaimPolicy: Retain
#             volumeBindingMode: Immediate
#
#         blockchain-pvc:
#           apiVersion: v1
#           kind: PersistentVolumeClaim
#           spec:
#             metadata:
#               name: blockchain-data
#               namespace: crypto
#             spec:
#               storageClassName: blockchain-nfs-storage
#               accessModes:
#                 - ReadWriteMany
#               resources:



- name: crypto-storage
  namespace: crypto
  createNamespace: true
  installed: true
  chart: bjw-s/app-template
  values:
    - rawResources:
        nfs-blockchains-pv:
          apiVersion: v1
          kind: PersistentVolume
          annotations:
            pv.kubernetes.io/provisioned-by: nfs.csi.k8s.io
          spec:
            spec:
              capacity:
                storage: 10Gi
              accessModes:
                - ReadWriteOnce
              persistentVolumeReclaimPolicy: Retain
              storageClassName: nfs-blockchains
              mountOptions:
                - nfsvers=4.1
              csi:
                driver: nfs.csi.k8s.io
                volumeHandle: 10.83.101.5##
                volumeAttributes:
                  server: 10.83.101.5
                  share: /mnt/hot/blockchains
        nfs-blockchains-pvc:
          apiVersion: v1
          kind: PersistentVolumeClaim
          spec:
            spec:
              storageClassName: nfs-blockchains
              accessModes: [ReadWriteOnce]
              resources:
                requests:
                  storage: 5Mi

- name: monerod
  namespace: crypto 
  createNamespace: true 
  installed: true 
  needs:
    - crypto/crypto-storage
  inherit:
    - template: default
